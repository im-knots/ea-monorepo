{{- if .Values.rbac.enabled }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ea-front-role
  namespace: {{ .Release.Namespace }}
rules:
  # ðŸ”¹ Allow creating and deleting Kubernetes Secrets (for user credentials)
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "list", "delete"]

  # ðŸ”¹ Allow creating ServiceAccounts for user isolation
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["create", "delete"]

  # ðŸ”¹ Allow managing RBAC Roles for user-specific access control
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles"]
    verbs: ["create", "delete"]

  # ðŸ”¹ Allow managing RoleBindings to link ServiceAccounts to RBAC Roles
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["rolebindings"]
    verbs: ["create", "delete"]

  # ðŸ”¹ Allow creation of user RBAC roles with k8s events permissions
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch", "update"]

  # ðŸ”¹ Allow managing KongConsumers (Kong CRD)
  - apiGroups: ["configuration.konghq.com"]
    resources: ["kongconsumers"]
    verbs: ["create", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ea-front-rolebinding
  namespace: {{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    name: {{ include "ea-front.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: ea-front-role
  apiGroup: rbac.authorization.k8s.io
{{- end }}
